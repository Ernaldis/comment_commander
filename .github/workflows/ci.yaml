name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:

  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-rust-
    - name: Format
      run: cargo fmt --all --check

  lint:
    runs-on: ubuntu-latest
    needs: format
    steps:
      - uses: actions/checkout@v3
      - name: Install Clippy
        run: rustup component add clippy
      - name: Run Clippy
        run: cargo clippy -- -D warnings -W clippy::pedantic -W clippy::nursery -W clippy::unwrap_used -W clippy::expect_used

  build:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
    steps:
    - uses: actions/checkout@v3
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-rust-
    - name: Set Rust toolchain
      run: rustup default ${{ matrix.rust-toolchain }}
    - name: Build
      run: cargo build --verbose
