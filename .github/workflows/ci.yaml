name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:

  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Cache Rust dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-rust-
    - name: Format
      run: cargo fmt --all --check
      
  lint:
    runs-on: ubuntu-latest
    needs: format
    steps:
    - uses: actions/checkout@v3
    - name: Cache Rust dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-rust-
    - name: install clippy
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: clippy
    - name: 'üîç Static analysis: run Clippy'
      uses: giraffate/clippy-action@v1
      with:
        clippy_flags: --no-deps --all-targets --all-features -- -D warnings
        reporter: github-check
        fail_on_error: true
        
  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v3
    - name: Cache Rust dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-rust-
    - name: Build
      run: cargo build --verbose
